{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store/store.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactListItem.module.css"],"names":["module","exports","addContact","createAction","filterContact","deleteContact","contactAddDelReducer","createReducer","id","name","number","type","state","action","payload","filter","contact","contactFilterReducer","combineReducers","items","rootReducer","contacts","contactReducer","store","configureStore","reducer","connect","dispatch","useState","setName","setNumber","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","contactName","contactExist","forEach","toLowerCase","alert","isContactExist","uuid","className","Style","form","label","input","placeholder","pattern","title","onChange","required","button","onClick","contacrList","includes","filterContacts","map","filterQuery","setQuery","event","String","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22e2f4d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__28ggj\",\"input\":\"Filter_input__3X_8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2-GE7\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contact/add\");\r\nexport const filterContact = createAction(\"contact/filter\");\r\nexport const deleteContact = createAction(\"contact/delete\");","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, filterContact } from './contacts-actions';\r\n\r\nconst initialState = [\r\n   {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n];\r\n\r\nconst contactAddDelReducer = createReducer(initialState, {\r\n  [addContact.type]: (state, action) => [...state, action.payload],\r\n  [deleteContact.type]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\n\r\nconst contactFilterReducer = createReducer(\"\", {\r\n  [filterContact.type]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: contactAddDelReducer,\r\n  filter: contactFilterReducer,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport contactReducer from \"../contacts/contacts-reducer\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactReducer,\r\n});\r\n\r\nconst store = configureStore({ reducer: rootReducer });\r\nexport default store;","import { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/contacts-actions\";\r\nimport uuid from \"react-uuid\";\r\nimport Style from \"./ContactForm.module.css\";\r\n\r\nconst isContactExist = (contactName, contacts) => {\r\n  let contactExist = true;\r\n\r\n  contacts.forEach(({ name }) => {\r\n    if (name.toLowerCase() === contactName.toLowerCase()) {\r\n      alert(`${contactName} is already in contacts`);\r\n      contactExist = false;\r\n    }\r\n  });\r\n\r\n  return contactExist;\r\n};\r\n\r\nfunction ContactForm({ contacts, addContact }) {\r\n  \r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (isContactExist(name, contacts.items)) {\r\n      addContact({ id: uuid(), name, number });\r\n      reset();\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n  if (e.currentTarget.name === \"name\") {\r\n      setName(e.currentTarget.value);\r\n    } else if (e.currentTarget.name === \"number\") {\r\n      setNumber(e.currentTarget.value);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={Style.form}>\r\n      <label className={Style.label}>\r\n        Name\r\n        <input\r\n          className={Style.input}\r\n          type=\"text\"\r\n          placeholder=\"type name\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label className={Style.label}>\r\n        Number\r\n        <input\r\n          className={Style.input}\r\n          type=\"tel\"\r\n          placeholder=\"999-99-99\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={Style.button}>\r\n        add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addContact: ({ id, name, number }) =>\r\n      dispatch(addContact({ id, name, number })),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  contact: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  addContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};","\r\nimport { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Style from \"./ContactListItem.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts/contacts-actions\";\r\n\r\nfunction ContactListItem({ id, name, number, deleteContact }) {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [currentID, setID] = useState(id);\r\n  return (\r\n    <li id={id} className={Style.contact}>\r\n      <p className={Style.name}>{name}</p>\r\n      <p className={Style.number}>{number}</p>\r\n      <button\r\n        className={Style.button}\r\n        onClick={() => deleteContact(id)}\r\n      >\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteContact: (id) => dispatch(deleteContact(id)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactListItem);","import { connect } from \"react-redux\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport Style from \"./ContactList.module.css\";\r\n\r\nfunction ContactList({ contacts }) {\r\n  const filterContacts = (contacts) => {\r\n    if (contacts.filter !== \"\") {\r\n      return contacts.items.filter(({ name }) =>\r\n        name.includes(contacts.filter)\r\n      );\r\n    } else {\r\n      return contacts.items;\r\n    }\r\n  };\r\n  return (\r\n    <ul className={Style.contacrList}>\r\n      {filterContacts(contacts).map((contact) => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          id={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contact: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import React from 'react';\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterContact } from \"../../redux/contacts/contacts-actions\";\r\nimport Style from \"./Filter.module.css\";\r\n\r\nfunction Filter({ filterContact }) {\r\n  const [filterQuery, setQuery] = useState(\"\");\r\n  const handleChange = (event) => {\r\n    setQuery(event.currentTarget.value);\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    filterContact(String(filterQuery));\r\n  };\r\n  return (\r\n    <>\r\n      <form className={Style.form} onSubmit={handleSubmit}>\r\n        <label>\r\n          <h3>Find contacts by name:</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={filterQuery}\r\n            onChange={handleChange}\r\n            className={Style.input}\r\n          />\r\n        </label>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    filterContact: (filter) => dispatch(filterContact(filter)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);","import ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store/store\";\r\nimport './index.css';\r\nimport App from './App.js';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2PVAK\",\"label\":\"ContactForm_label__30pm1\",\"input\":\"ContactForm_input__XobfW\",\"button\":\"ContactForm_button__3_UQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactListItem_contact__10UQh\",\"name\":\"ContactListItem_name__2X402\",\"number\":\"ContactListItem_number__petoG\",\"button\":\"ContactListItem_button__2YkzO\"};"],"sourceRoot":""}